#include "uni10/uni10.hpp"

using namespace std;
using namespace uni10;

double norm( Matrix<double> &mat){
  size_t elemnum = mat.col()*mat.row();
  double norm = 0;
  for (int i=0; i!=elemnum; i++){
    norm += (mat[i]*mat[i]);
  }
  return norm;
}

int main(){
  double elem_R76[42] = {
-0.5627,  -0.2763,   0.3227,   0.8999,   1.8996,  -0.6822,
 0.6813,  -0.1912,  -0.1882,   2.4497,  -0.2105,   0.6835,
 0.1202,  -1.5213,  -0.7849,  -0.0679,  -0.3109,  -0.5101,
-0.7733,   0.9457,   2.0892,   0.9951,  -0.2162,   0.6405,
 0.0531,  -0.8674,  -0.7178,   0.8982,  -2.1119,  -1.3873,
 1.2997,  -2.1452,   0.6400,   1.0500,   0.5426,  -1.6907,
 0.5454,  -2.1638,   0.3234,   0.9323,   0.2660,  -1.3386};

  double elem_R65[30] = {
 1.2729,   0.5350,   1.6723,  -1.3479,   0.9479,
-0.8813,   0.7395,   0.6510,   2.0174,  -0.1201,
-0.2924,  -1.0159,   0.6704,  -0.7185,  -1.0702,
-1.7246,  -1.1516,  -0.3226,  -0.0346,   0.0428,
 1.1917,  -0.1278,   0.2348,   0.3441,  -0.7308,
 0.6310,  -0.5744,  -0.1538,   0.2941,  -0.8734};

///expected answer from http://www.bluebit.gr/matrix-calculator/matrix_multiplication.aspx
  double elem_ans[35] = {
-0.285797540000000, -1.720437320000000, -0.643895730000000,  0.391076560000000, -1.599431720000000,
-2.953555960000000, -2.772479540000000, -0.056123410000000, -1.125004770000000,  0.531890690000000,
 1.147956740000000,  0.147613660000000, -1.288194200000000, -2.921789310000000,  1.806466630000000,
-3.998300560000000, -3.323018630000000,  0.252768870000000,  1.528642220000000, -3.441274940000000,
-3.899257920000000,  0.148578040000000, -1.529358090000000, -2.471514390000000,  3.716185090000000,
 1.126771610000000, -1.848598100000000,  1.254721250000000, -6.886288320000000,  1.929761450000000,
 0.371125460000000, -1.975622800000000, -0.312180520000000, -5.667166920000000,  1.445397240000000};

  Matrix<double> R76(7, 6), R65(6, 5), R75, ans( 7, 5);
  R76.setElem( elem_R76); R65.setElem( elem_R65); ans.setElem( elem_ans);

///compare answer with expected answer
  R75 = dot( R76, R65);
  cout<<norm( R75-(1.0)*ans)<<endl;
  cout<<norm( R75-R75)<<endl;

  return 0 ;
}
